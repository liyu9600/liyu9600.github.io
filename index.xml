<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>日拱一卒</title>
    <link>https://liyu9600.github.io/</link>
    <description>Recent content on 日拱一卒</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 03 Jul 2022 11:11:23 +0800</lastBuildDate><atom:link href="https://liyu9600.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Redis-脑裂</title>
      <link>https://liyu9600.github.io/posts/redis/%E8%84%91%E8%A3%82/</link>
      <pubDate>Sun, 03 Jul 2022 11:11:23 +0800</pubDate>
      
      <guid>https://liyu9600.github.io/posts/redis/%E8%84%91%E8%A3%82/</guid>
      <description>定义 主从集群中，同时又两个主节点，它们都能接收写请求。
影响 客户端不知道应该往哪个主节点写入数据，结果就是不同的客户端往不同的主节点写入数据。严重的话，会进一步导致数据丢失。
问题 在主从集群中，客户端发送的数据丢失。
分析 确认是否数据同步出现了问题
在主从集群中发生数据丢失，最常见的原因是主库的数据还没有同步到从库，结果主库发生故障，等从库升级为主库后，未同步的数据丢失。 可以通过对比主从库上复制进度差值来进行判断，如果slave_repl_offset&amp;lt;master_repl_offset，那么就可以认定数据丢失是由数据同步未完成导致的。 排查客户端的操作日志，发生脑裂现象
发现在主从切换后的一段时间内，有一个客户端仍然在和原主库通信，并没有和升级的新主库进行交互。相当于主从集群中同时有了两个主库。 发现原主库假故障导致脑裂
采用哨兵机制进行主从切换，当主仓切换发生时，一定是有超过预设数量的（quorum配置项）的哨兵实例和主库的心跳都超时了，才会把主库判断为客观下线。然后，哨兵开始执行切换操作。哨兵切换完成后客户端会和新主库进行通信，发送请求操作。 切换过程中，客户端仍然和原主库通信。表明原主库并没有真的发生故障（主库进程挂掉） 原因： 原主库所在的机器CPU被其他程序临时用满，导致Redis主库暂时无法响应心跳，随后当CPU使用率降下来，原主库有可开始正常服务请求了。 主库自身遇到堵塞的情况。例如，处理bigKey或是发生内存swap，短时间内无法响应心跳，等主库堵塞解除后，主库又恢复正常。 脑裂会导致数据丢失
主从切换后，从库一旦升级为新主库，哨兵就会让原主库执行slave of命令，和新主库重新进行全量同步。 在全量同步执行的最后阶段，原主库需要清空本地的数据，加载新主库发送的RDB文件。 原主库在主从切换期间保存的新写数据丢失。 解决方案 思路: 因为问题是出在原主库发生假故障后仍然能接收请求上，所以从主从集群机制的配置项中查找是否能限制主库接收请求的配置。
min-slaves-to-write：设置主库能进行数据同步的最少从库数量。 min-slaves-max-lag：设置主从库期间进行数据复制时，从库给主库发送ACK消息的最大延迟（以秒为单位）。 假设min-slaves-to-write=N &amp;amp;&amp;amp; min-slaves-max-lag=T，要求主库连接的从库至少有N个从库，和主库进行数据复制的ACK消息延迟不能超过T秒，否则主库就不会再接收客户端的请求了。 建议 假设从库有K个，配置min-slaves-to-write=K/2+1 &amp;amp;&amp;amp; 10&amp;lt;=min-slaves-max-lag&amp;lt;=20。</description>
    </item>
    
  </channel>
</rss>
